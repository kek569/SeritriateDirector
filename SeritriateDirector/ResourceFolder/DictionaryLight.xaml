<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <SolidColorBrush x:Key="FillFon" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="FillFont" Color="Black"/>
    <SolidColorBrush x:Key="FillFontOne" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="FillAccentuation" Color="#008080"/>
    <SolidColorBrush x:Key="FillLup" Color="#16171B"/>
    <SolidColorBrush x:Key="FillLb" Color="#C7C7C7"/>

    <Style x:Key="FonBorder"
   TargetType="Border">
        <Setter Property="Background"
        Value="{StaticResource FillFon}"/>
        <Setter Property="CornerRadius"
        Value="17"/>
    </Style>

    <Style x:Key="CloseIm" TargetType="Image">
        <Setter Property="Source" 
        Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/Close.png"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="LogoIm" TargetType="Image">
        <Setter Property="Source" 
        Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/Logo.png"/>
        <Setter Property="Width" Value="42"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="Margin" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="BackIm" TargetType="Image">
        <Setter Property="Source" 
Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/BackLight.png"/>
    </Style>

    <Style x:Key="ThemeIm" TargetType="Image">
        <Setter Property="Source" 
Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/Theme.png"/>
    </Style>

    <Style x:Key="BugsIm" TargetType="Image">
        <Setter Property="Source" 
             Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/BugsLight.png"/>
    </Style>

    <Style x:Key="LettersIm" TargetType="Image">
        <Setter Property="Source" 
                    Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/LettersLight.png"/>
    </Style>

    <Style x:Key="OrdersIm" TargetType="Image">
        <Setter Property="Source" 
                 Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/OrdersLight.png"/>
    </Style>

    <Style x:Key="ScheduleIm" TargetType="Image">
        <Setter Property="Source" 
                 Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/ScheduleLight.png"/>
    </Style>

    <Style x:Key="EnerIm" TargetType="Image">
        <Setter Property="Source" 
                    Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/EnerLight.png"/>
    </Style>

    <Style x:Key="LanguageIm" TargetType="Image">
        <Setter Property="Source" 
                 Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/LanguageLight.png"/>
    </Style>

    <Style x:Key="SaveIm" TargetType="Image">
        <Setter Property="Source" 
                    Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/SaveLight.png"/>
    </Style>

    <Style x:Key="OpenEyesIm" TargetType="Image">
        <Setter Property="Source" 
                    Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/OpenEyesLight.png"/>
        <Setter Property="Margin" Value="10, 10, 25, 10"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
    </Style>

    <Style x:Key="CloseEyesIm" TargetType="Image">
        <Setter Property="Source" 
                    Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/CloseEyesLight.png"/>
        <Setter Property="Margin" Value="10, 10, 25, 10"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
    </Style>

    <Style x:Key="StaffIm" TargetType="Image">
        <Setter Property="Source" 
                 Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/StaffLight.png"/>
    </Style>

    <Style x:Key="ExportIm" TargetType="Image">
        <Setter Property="Source" 
                    Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/ExportLight.png"/>
    </Style>

    <Style x:Key="AddIm" TargetType="Image">
        <Setter Property="Source" 
                 Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/AddLight.png"/>
    </Style>

    <Style x:Key="LoadPhotoIm" TargetType="Image">
        <Setter Property="Source" 
                 Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/LoadPhotoLight.png"/>
    </Style>

    <Style x:Key="SendMessagesIm" TargetType="Image">
        <Setter Property="Source" 
                 Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/SendMessagesLight.png"/>
    </Style>

    <Style x:Key="ResetPasswordIm" TargetType="Image">
        <Setter Property="Source" 
             Value="/SeritriateDirector;component/ResourceFolder/ImageFolder/LightThemeImageFolder/ResetPasswordLight.png"/>
    </Style>

    <Style x:Key="InvisibleButton" TargetType="Button">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource FillFont}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="8" BorderBrush="#00000000" BorderThickness="2">
                            <Border.Background>
                                <RadialGradientBrush GradientOrigin="0.496,1.052">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                            ScaleX="1.5" ScaleY="1.5"/>
                                            <TranslateTransform X="0.02" Y="0.3"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="#00000000"/>
                                    <GradientStop Offset="0.3" Color="#00000000"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              TextElement.FontWeight="Bold">
                            </ContentPresenter>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#00000000" Offset="0.3"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextDecorations="Underline" Text="{TemplateBinding Content}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderTop" TargetType="Border">
        <Setter Property="Background" 
        Value="{StaticResource FillLup}"/>
        <Setter Property="CornerRadius"
        Value="17, 17, 0, 0"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground"
        Value="{StaticResource FillFont}"/>
        <Setter Property="VerticalContentAlignment"
        Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
        Value="Left"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{StaticResource FillAccentuation}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource FillFont}" />
        <Setter Property="Padding" Value="5,4,5,4" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">

                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity"
                                  Storyboard.TargetName="DisabledVisualElement" />
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)"
                                  Storyboard.TargetName="PART_ContentHost" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity"
                                  Storyboard.TargetName="ReadOnlyVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement"
                                  Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                  Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="10" Opacity="1">
                            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" 
SnapsToDevicePixels="True">
                                <Border x:Name="ReadOnlyVisualElement"
                          CornerRadius="2" Opacity="0" />
                                <ScrollViewer x:Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}"
                          BorderThickness="0" IsTabStop="False" Margin="1" Padding="{TemplateBinding Padding}" 
                                              TextElement.Foreground="{StaticResource FillFont}"/>
                            </Grid>
                        </Border>

                        <Border x:Name="DisabledVisualElement" Background="{x:Null}"
                    IsHitTestVisible="False" Margin="1" Opacity="0" CornerRadius="10" />
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="2" Opacity="0" RadiusX="10"
                    RadiusY="10" 
                    StrokeThickness="1,1,1,1"/>
                        <Border x:Name="ValidationErrorElement" BorderThickness="1"
                    CornerRadius="10" Visibility="Collapsed">
                            <Grid HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0"
                       VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                          Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="LabelNormal" TargetType="Label">
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground"
        Value="{StaticResource FillFont}"/>
        <Setter Property="VerticalContentAlignment"
        Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
        Value="Right"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style x:Key="LabelLogo" TargetType="Label"
   BasedOn="{StaticResource LabelNormal}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="HorizontalContentAlignment"
        Value="Center"/>
        <Setter Property="FontWeight"
        Value="Bold"/>
    </Style>

    <Style x:Key="TextBlockInBtn" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground"
Value="{StaticResource FillFont}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground"
    Value="{StaticResource FillFont}"/>
        <Setter Property="VerticalContentAlignment"
    Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
    Value="Left"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="PasswordChar"
    Value="✗"/>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{StaticResource FillAccentuation}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource FillFont}" />
        <Setter Property="Padding" Value="5,4,5,4" />
        <Setter Property="SelectionBrush" Value="DarkGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity"
                            Storyboard.TargetName="DisabledVisualElement" />
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="PART_ContentHost" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity"
                            Storyboard.TargetName="ReadOnlyVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement"
                            Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                            Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="10" Opacity="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement"
                      CornerRadius="2" Opacity="0" />
                                <ScrollViewer x:Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}"
                      BorderThickness="0" IsTabStop="False" Margin="1" Padding="{TemplateBinding Padding}" />
                            </Grid>
                        </Border>


                        <Border x:Name="DisabledVisualElement" Background="{StaticResource FillFont}"
                IsHitTestVisible="False" Margin="1" Opacity="0" CornerRadius="20" />
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="2" Opacity="0" RadiusX="10"
                RadiusY="10" 
                StrokeThickness="1,1,1,1"/>
                        <Border x:Name="ValidationErrorElement" BorderThickness="1"
                CornerRadius="10" Visibility="Collapsed">
                            <Grid HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0"
                   VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                      Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboboxButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border   
         Background="{x:Null}"   
         x:Name="border"   
         CornerRadius="0,10,10,0"   
         BorderThickness="0,1,1,1"  
         BorderBrush="{StaticResource FillAccentuation}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboboxTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border CornerRadius="10,0,0,10"  
               BorderThickness="1,1,0,1"  
               Background="{x:Null}"  
               BorderBrush="{StaticResource FillAccentuation}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="FontFamily" 
        Value="Inter"/>
        <Setter Property="FontSize"
        Value="16"/>
        <Setter Property="Foreground"
        Value="{StaticResource FillFon}"/>
        <Setter Property="VerticalContentAlignment"
        Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
        Value="Left"/>
        <Setter Property="Margin"
        Value="10"/>
        <Setter Property="Background" 
        Value="{StaticResource FillAccentuation}"/>
        <Setter Property="BorderBrush"
        Value="{StaticResource FillAccentuation}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition MaxWidth="45"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Name="PART_EditableTextBox"  
                Style="{StaticResource ComboboxTextBoxStyle}"  
                Padding="5,0,0,0"  
                Height="{TemplateBinding Height}"/>
                        <ToggleButton Grid.Column="1"  
               Height="{TemplateBinding Height}"  
               Style="{StaticResource ComboboxButtonStyle}"  
               Focusable="False"  
               IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"  
               ClickMode="Press">
                            <Path Grid.Column="1"  
                  HorizontalAlignment="Center"  
                  VerticalAlignment="Center"  
                  Data="M 0 0 L 6 6 L 12 0 Z"  
                  Fill="{StaticResource FillFont}" />
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"  
               Content="{TemplateBinding SelectionBoxItem}"  
               ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"  
               ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"  
               VerticalAlignment="Center"  
               HorizontalAlignment="Left"  
               Margin="20,0,0,0"/>
                        <Popup Name="Popup"  
               Placement="Bottom"  
               IsOpen="{TemplateBinding IsDropDownOpen}"  
               AllowsTransparency="False"   
               Focusable="False"  
               PopupAnimation="Slide">
                            <Grid Name="DropDown"  
                 SnapsToDevicePixels="True"          
                 MinWidth="{TemplateBinding ActualWidth}"  
                 MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border   
                   x:Name="DropDownBorder"  
                   BorderThickness="1"  
                   CornerRadius="0"  
                   BorderBrush="#424242"/>
                                <ScrollViewer Margin="0,0,0,0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Button">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource FillFont}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FillAccentuation}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="8" BorderBrush="{StaticResource FillAccentuation}" BorderThickness="2">
                            <Border.Background>
                                <RadialGradientBrush GradientOrigin="0.496,1.052">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                    ScaleX="1.5" ScaleY="1.5"/>
                                            <TranslateTransform X="0.02" Y="0.3"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="#00000000"/>
                                    <GradientStop Offset="0.3" Color="#00000000"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.FontWeight="Bold">
                            </ContentPresenter>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#FF33962B" Offset="1"/>
                                        <GradientStop Color="#FF303030" Offset="0.3"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalContentAlignment" 
        Value="Center"/>
        <Setter Property="HorizontalContentAlignment" 
        Value="Center"/>
        <Setter Property="Background" 
        Value="Transparent"/>
        <Setter Property="Foreground" 
        Value="{StaticResource FillFont}"/>
        <Setter Property="BorderThickness" 
        Value="1,0,1,1"/>
        <Setter Property="BorderBrush"
        Value="{StaticResource FillAccentuation}"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="Background" 
        Value="Transparent"/>
        <Setter Property="Foreground" 
        Value="{StaticResource FillFont}"/>
        <Setter Property="VerticalContentAlignment" 
        Value="Center"/>
        <Setter Property="HorizontalContentAlignment" 
        Value="Left"/>
        <Setter Property="VerticalGridLinesBrush"
        Value="{StaticResource FillAccentuation}"/>
        <Setter Property="HorizontalGridLinesBrush"
        Value="{StaticResource FillAccentuation}"/>
        <Setter Property="HeadersVisibility"
        Value="Column"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="BorderBrush" 
        Value="{StaticResource FillAccentuation}"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="Background" 
Value="{StaticResource FillFon}"/>
        <Setter Property="BorderBrush" 
Value="{StaticResource FillAccentuation}"/>
        <Setter Property="Foreground" 
        Value="{StaticResource FillAccentuation}"/>
        <Setter Property="HorizontalContentAlignment"
        Value="Left"/>
        <Setter Property="VerticalContentAlignment"
        Value="Center"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="TBlListBox" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource FillFont}"/>
	<Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" 
Value="{x:Null}"/>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background" 
Value="{StaticResource FillFon}"/>
        <Setter Property="BorderBrush" 
Value="{StaticResource FillAccentuation}"/>
    </Style>
    <Style TargetType="ListBoxItem">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource FillAccentuation}" />
    </Style>

    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="{StaticResource FillFon}"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#008080" Offset="0"/>
                    <GradientStop Color="#008080" Offset="0.375"/>
                    <GradientStop Color="#008080" Offset="0.375"/>
                    <GradientStop Color="#008080" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="10">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Stretch" Margin="0,0,0,0" >
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid Background="{StaticResource FillFon}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="32" Height="32">
                                        <Path Fill="#26c9ff"  HorizontalAlignment="Center"  Stretch="Fill" VerticalAlignment="Center"  Data="M 890.127 145.672 h -43.389 V 132.78 c 0 -38.644 -31.466 -70.234 -69.922 -70.234 h -1.032 c -38.458 0 -69.922 31.59 -69.922 70.234 v 12.892 h -386.7 V 132.78 c 0 -38.644 -31.465 -70.234 -69.922 -70.234 h -1.063 c -38.457 0 -69.923 31.59 -69.923 70.234 v 12.892 h -43.296 c -38.458 0 -69.923 31.622 -69.923 70.207 v 671.446 c 0 38.644 31.466 70.236 69.923 70.236 h 755.17 c 38.458 0 69.922 -31.592 69.922 -70.236 V 215.879 c 0 -38.585 -31.464 -70.207 -69.923 -70.207 Z M 733.83 132.78 c 0 -23.222 18.793 -42.139 41.954 -42.139 h 1.032 c 23.13 0 41.954 18.918 41.954 42.139 v 124.927 c 0 23.224 -18.824 42.14 -41.954 42.14 h -1.032 c -23.161 0 -41.954 -18.916 -41.954 -42.14 V 132.779 Z m -527.607 0 c 0 -23.222 18.793 -42.139 41.955 -42.139 h 1.063 c 23.098 0 41.954 18.918 41.954 42.139 v 124.927 c 0 23.224 -18.856 42.14 -41.954 42.14 h -1.063 c -23.162 0 -41.955 -18.916 -41.955 -42.14 V 132.779 Z m 683.904 768.626 H 134.958 c -7.585 0 -13.985 -6.525 -13.985 -14.08 V 393.649 h 783.138 v 493.676 c 0 7.555 -6.399 14.08 -13.984 14.08 Z" />
                                        <Path Fill="#26c9ff" Margin="7" HorizontalAlignment="Center" Stretch="Fill" VerticalAlignment="Center"  Data="M 223.755 494.2 H 352.78 v 63.488 H 223.755 V 494.2 Z M 449.035 494.2 h 128 v 63.488 h -128 V 494.2 Z M 673.291 494.2 h 125.952 v 63.488 H 673.291 V 494.2 Z M 223.755 623.224 H 352.78 v 62.464 H 223.755 v -62.464 Z M 449.035 623.224 h 128 v 62.464 h -128 v -62.464 Z M 673.291 623.224 h 125.952 v 62.464 H 673.291 v -62.464 Z M 223.755 749.176 H 352.78 v 65.536 H 223.755 v -65.536 Z M 449.035 749.176 h 128 v 65.536 h -128 v -65.536 Z M 673.291 749.176 h 125.952 v 65.536 H 673.291 v -65.536 Z" StrokeThickness="2"/>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Center" Width="30"/>
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0"  Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Center" Style="{DynamicResource DatePickerTextBoxStyle1}" Background="{x:Null}" Margin="0,0,0,0" />
                            <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="32" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="32"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style x:Key="DatePickerTextBoxStyle1" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <TextBox BorderThickness="0" Text="{Binding Path=SelectedDate, StringFormat='yyyy.MM.dd', RelativeSource={RelativeSource AncestorType=DatePicker}}" Foreground="White" VerticalContentAlignment="Center" Padding="5,0,5,0" Background="{x:Null}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleSwitch" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid  Background="Transparent" SnapsToDevicePixels="True"
                           Height="18">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="34" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid  x:Name="markGrid" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="Transparent" Height="16" x:Name="moveEllipse"
                                       >
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="0" To="16" Duration="0:0:0.4" 
                                              Storyboard.TargetProperty="Width" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation To="0" Duration="0:0:0.4" 
                                                         Storyboard.TargetProperty="Width"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <Rectangle RadiusX="6" RadiusY="6" 
                                       Grid.ColumnSpan="2"
                                       Name="line"
                                       StrokeThickness=".8"
                                       IsHitTestVisible="False"
                                       Margin="1,4,1,4"
                                 >
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="Gold"/>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <Ellipse Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                     StrokeThickness=".8"
                                     Name="spot"
                                     Grid.Column="1"
                                     HorizontalAlignment="Left">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="DarkGoldenrod"/>
                                        <Setter Property="Stroke" Value="#BCCC04"/>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="line" Value="Red"/>
                            <Setter Property="Stroke" TargetName="spot" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="line" Value="#18FF04"/>
                            <Setter Property="Stroke" TargetName="spot" Value="#18FF04"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="line" Value="#01393D"/>
                            <Setter Property="Fill" TargetName="spot" Value="#0D0737"/>
                            <Setter Property="Stroke" TargetName="spot" Value="DarkCyan"/>
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="line" Value="Gold"/>
                            <Setter Property="Fill" TargetName="spot" Value="DarkGoldenrod"/>
                            <Setter Property="Stroke" TargetName="spot" Value="#BCCC04"/>
                        </Trigger>-->
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Fill" TargetName="line" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FillAccentuation}"/>
    </Style>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource FillFont}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.FontWeight="Bold"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="Blue"/>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextDecorations="Underline" Text="{TemplateBinding Content}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="#18AA00"/>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextDecorations="None" Text="{TemplateBinding Content}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextDecorations="Underline" Text="{TemplateBinding Content}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>